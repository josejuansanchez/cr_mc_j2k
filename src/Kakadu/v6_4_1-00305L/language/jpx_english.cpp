// -----------------------------------------------------------------
// This file is automatically generated by "kdu_text_extractor"
// Do not edit the file directly.  You may, however, use this file
// as a template for alternate versions in which the text strings
// are translated into different languages.
// -----------------------------------------------------------------
#include <kdu_messaging.h>

struct kdl_message_info{
  const char *context;
  kdu_uint32 id;
  const char *lead_in;
  const char *text;
};

static bool
  kdl_register_text(kdl_message_info *info, int num_records)
{
  for (; num_records > 0; num_records--, info++)
    kdu_customize_text(info->context,info->id,
                       info->lead_in,info->text);
  return true;
}

static kdl_message_info data[52] = {
  {
    "E(jpx.cpp)", 0,
    "Error in Kakadu File Format Support:\n",
    "Error encountered reading fragment list (flst) box.  Unable to read the initial fragment count.\0"
  },
  {
    "E(jpx.cpp)", 1,
    "Error in Kakadu File Format Support:\n",
    "Error encountered reading fragment list (flst) box.  Contents of box terminated prematurely.\0"
  },
  {
    "E(jpx.cpp)", 3,
    "Error in Kakadu File Format Support:\n",
    "Attempting to read or write a fragment list box which refers to one or more URL's, not found in the associated data references object (see `jpx_target::access_data_references').\0"
  },
  {
    "E(jpx.cpp)", 6,
    "Error in Kakadu File Format Support:\n",
    "JP2-family data source contains a malformed file type box.\0"
  },
  {
    "E(jpx.cpp)", 7,
    "Error in Kakadu File Format Support:\n",
    "Malformed reader requirements (rreq) box found in JPX data source.  Box terminated unexpectedly.\0"
  },
  {
    "E(jpx.cpp)", 8,
    "Error in Kakadu File Format Support:\n",
    "Malformed reader requirements (rreq) box found in JPX data source.  Box terminated unexpectedly.\0"
  },
  {
    "E(jpx.cpp)", 9,
    "Error in Kakadu File Format Support:\n",
    "Malformed reader requirements (rreq) box found in JPX data source. Box terminated unexpectedly.\0"
  },
  {
    "E(jpx.cpp)", 10,
    "Error in Kakadu File Format Support:\n",
    "Malformed reader requirements (rreq) box found in JPX data source. Box terminated unexpectedly.\0"
  },
  {
    "E(jpx.cpp)", 11,
    "Error in Kakadu File Format Support:\n",
    "Malformed reader requirements (rreq) box found in JPX data source.  Box appears to be too long.\0"
  },
  {
    "E(jpx.cpp)", 12,
    "Error in Kakadu File Format Support:\n",
    "Malformed Composition Options (copt) box found in JPX data source.  Insufficient or illegal field values encountered.  The height and width parameters must also be non-zero.\0"
  },
  {
    "E(jpx.cpp)", 13,
    "Error in Kakadu File Format Support:\n",
    "Malformed Instruction Set (inst) box found in JPX data source.  Insufficient fields encountered.\0"
  },
  {
    "E(jpx.cpp)", 14,
    "Error in Kakadu File Format Support:\n",
    "Malformed Instruction Set (inst) box encountered in JPX data source.  Box appears to be too long.\0"
  },
  {
    "E(jpx.cpp)", 15,
    "Error in Kakadu File Format Support:\n",
    "Malformed Instruction Set (inst) box found in JPX data source.  Terminated unexpectedly.\0"
  },
  {
    "E(jpx.cpp)", 16,
    "Error in Kakadu File Format Support:\n",
    "Malformed Instruction Set (inst) box found in JPX data source.  Terminated unexpectedly.\0"
  },
  {
    "E(jpx.cpp)", 17,
    "Error in Kakadu File Format Support:\n",
    "Malformed Instruction Set (inst) box found in JPX data source.  Terminated unexpectedly.\0"
  },
  {
    "E(jpx.cpp)", 18,
    "Error in Kakadu File Format Support:\n",
    "Malformed Instruction Set (inst) box found in JPX data source.  Terminated unexpectedly.\0"
  },
  {
    "E(jpx.cpp)", 19,
    "Error in Kakadu File Format Support:\n",
    "Illegal re-use count found in a compositing instruction within the JPX composition box.  The specified re-use counts found in the box lead to multiple conflicting definitions for the compositing layer which should be used by a particular instruction.\0"
  },
  {
    "E(jpx.cpp)", 31,
    "Error in Kakadu File Format Support:\n",
    "JPX data source appears to contain multiple JPX Codestream Registration (creg) boxes within the same compositing layer header (jplh) box.\0"
  },
  {
    "E(jpx.cpp)", 32,
    "Error in Kakadu File Format Support:\n",
    "Malformed Codestream Registration (creg) box found in JPX data source.  Insufficient or illegal fields encountered.\0"
  },
  {
    "E(jpx.cpp)", 33,
    "Error in Kakadu File Format Support:\n",
    "Malformed Codestream Registration (creg) box found in JPX data source.  Box size does not seem to be equal to 4+6k where k must be the number of referenced codestreams.\0"
  },
  {
    "E(jpx.cpp)", 34,
    "Error in Kakadu File Format Support:\n",
    "Malformed Codestream Registration (creg) box found in JPX data source.  Illegal (zero-valued) resolution parameters found for codestream .\0"
  },
  {
    "E(jpx.cpp)", 35,
    "Error in Kakadu File Format Support:\n",
    "Malformed Codestream Registration (creg) box found in JPX data source.  Alignment offsets must be strictly less than the denominator (point density) parameters, as explained in the JPX standard (accounting for corrigenda).\0"
  },
  {
    "E(jpx.cpp)", 37,
    "Error in Kakadu File Format Support:\n",
    "JPX source contains no image header box for a codestream.  The image header (ihdr) box cannot be found in a codestream header (chdr) box, and does not exist within a default JP2 header (jp2h) box.\0"
  },
  {
    "E(jpx.cpp)", 38,
    "Error in Kakadu File Format Support:\n",
    "JPX source contains a codestream with a palette (pclr) box, but no component mapping (cmap) box.  This illegal situation has been detected after examining both the codestream header (chdr) box, if any, for that codestream, and the default JP2 header (jp2h) box, if any.\0"
  },
  {
    "E(jpx.cpp)", 40,
    "Error in Kakadu File Format Support:\n",
    "Encountered a JPX compositing layer box which utilizes a non-existent codestream!\0"
  },
  {
    "E(jpx.cpp)", 41,
    "Error in Kakadu File Format Support:\n",
    "JP2/JPX source is internally inconsistent.  Either an explicit channel mapping box, or the set of channels implicitly identified by a colour space box, cannot all be associated with available code-stream image components.\0"
  },
  {
    "E(jpx.cpp)", 42,
    "Error in Kakadu File Format Support:\n",
    "JP2-family data source appears to contain more than one data reference (dtbl) box.  At most one should be found in the file.\0"
  },
  {
    "E(jpx.cpp)", 43,
    "Error in Kakadu File Format Support:\n",
    "JP2-family data source contains more than one top-level JP2 header (jp2h) box.\0"
  },
  {
    "E(jpx.cpp)", 45,
    "Error in Kakadu File Format Support:\n",
    "Data source supplied to `jpx_source::open' does not commence with a valid JP2-family signature box.\0"
  },
  {
    "E(jpx.cpp)", 46,
    "Error in Kakadu File Format Support:\n",
    "Data source supplied to `jpx_source::open' does not commence with a valid JP2-family signature box.\0"
  },
  {
    "E(jpx.cpp)", 47,
    "Error in Kakadu File Format Support:\n",
    "Data source supplied to `jpx_source::open' does not contain a correctly positioned file-type (ftyp) box.\0"
  },
  {
    "E(jpx.cpp)", 48,
    "Error in Kakadu File Format Support:\n",
    "Data source supplied to `jpx_source::open' does not contain a correctly positioned file-type (ftyp) box.\0"
  },
  {
    "E(jpx.cpp)", 49,
    "Error in Kakadu File Format Support:\n",
    "Data source supplied to `jpx_source::open' contains a correctly positioned file-type box, but that box does not identify either JP2 or JPX as a compatible file type.\0"
  },
  {
    "E(jpx.cpp)", 50,
    "Error in Kakadu File Format Support:\n",
    "Data source supplied to `jpx_source::open' does not contain a correctly positioned reader requirements box.\0"
  },
  {
    "E(jpx.cpp)", 51,
    "Error in Kakadu File Format Support:\n",
    "JPX data source appears to contain no codestreams at all.\0"
  },
  {
    "E(jpx.cpp)", 52,
    "Error in Kakadu File Format Support:\n",
    "JPX data source appears to contain an incomplete codestream.  Specifically, this either means that an embedded contiguous or fragmented codestream has been found without sufficient descriptive metadata, or that a codestream header box has been found without any matching embedded contiguous or fragmented codestream.  Both of these conditions are illegal for JPX and JP2 data sources.\0"
  },
  {
    "E(jpx.cpp)", 17107201,
    "Error in Kakadu File Format Support:\n",
    "Attempting to convert a `jpx_metanode' entry in the metadata hierarchy into a link, whereas there are other nodes which are links and point to this node.  This is legal only if the converted node is to have the \"Grouping\" link-type and each of the existing linking nodes has \"Alternate-child\" link-type -- otherwise the representation within the JPX file format would require a cross-reference box to point to another cross-reference box.\0"
  },
  {
    "E(jpx.cpp)", 17107202,
    "Error in Kakadu File Format Support:\n",
    "Attempting to convert a `jpx_metanode' entry in the metadata hierarchy into a link to another node which is itself a link or other form of cross-reference box.  This is legal only if the target node has the \"Grouping\" link type and node being converted is being assigned an \"Alternate-child\" link type -- otherwise, the representation within the JPX file format would require a cross-reference box to point to another cross-reference box.\0"
  },
  {
    "E(jpx.cpp)", 17172737,
    "Error in Kakadu File Format Support:\n",
    "Trying to add a metadata link to a metadata node which itself is a link.  This is legal only if the target node has the \"Grouping\" link-type (then the cross-reference can refer to its containing `asoc' box) and then only if the link you are trying to add has the \"Alternate Child\" link type (otherwise the cross-reference cannot refer to the `asoc' box).\0"
  },
  {
    "E(jpx.cpp)", 17172739,
    "Error in Kakadu File Format Support:\n",
    "Attempting to convert a `jpx_metanode' entry in the metadata hierarchy into a link which points to itself.  This cannot be achieved legally, since a link node can be referenced by another link node only if the referenced node has the \"Grouping\" link-type and the referring node has the \"Alternate-child\" link-type.\0"
  },
  {
    "E(jpx.cpp)", 33884418,
    "Error in Kakadu File Format Support:\n",
    "Trying to add descendants to a metadata node (`jpx_metanode') which is currently identified as a non-grouping link node.  Any link node (node represented by a cross-reference to another node in the metadata hierarchy) which has descendants must be a grouping link node -- one with link-type `JPX_GROUPING_LINK'.\0"
  },
  {
    "E(jpx.cpp)", 33884419,
    "Error in Kakadu File Format Support:\n",
    "Attempting to convert a `jpx_metanode' entry in the metadata hierarchy into a non-grouping link, where the node being converted already has descendants.  Link nodes which have descendants are automatically interpreted as grouping links.\0"
  },
  {
    "W(jpx.cpp)", 0,
    "Warning in Kakadu File Format Support:\n",
    "JPX data source appears to contain multiple composition boxes!! This is illegal.  All but first will be ignored.\0"
  },
  {
    "W(jpx.cpp)", 8400897,
    "Warning in Kakadu File Format Support:\n",
    "Malformed oriented elliptical region refinement information found in ROI Descriptions (`roid') box in JPX data source.  Oriented ellipses require two consecutive regions, the first of which is a simple ellipse, while the second has a centre which lies within (but not on) the bounding rectangle associated with the first ellipse.\0"
  },
  {
    "W(jpx.cpp)", 84217857,
    "Warning in Kakadu File Format Support:\n",
    "Unable to completely fill the region bounded by the scribble path; this is probably an internal flaw; you could either fill the unfilled portion manually or try again with a different complexity setting.\0"
  },
  {
    "W(jpx.cpp)", 151064577,
    "Warning in Kakadu File Format Support:\n",
    "Malformed quadrilateral region of interest information found in ROI Descriptions (`roid') box in JPX data source.  Generic quadrilaterals require two consecutive, regions, the first of which is a simple rectangle, while the second identifies a second rectangular region, contained within the first.\0"
  },
  {
    "W(jpx.cpp)", 151195649,
    "Warning in Kakadu File Format Support:\n",
    "ROI shape edit will cause the maximum number of regions in the JPX ROI Description box to be exceeded.  Delete or simplify some regions to simple rectangles or ellipses.\0"
  },
  {
    "W(jpx.cpp)", 285282305,
    "Warning in Kakadu File Format Support:\n",
    "Illegal quadrilateral vertices encountered while reading an ROI Description (`roid') box from a JPX source.  Quadrilateral edges cross through each other!\0"
  },
  {
    "W(jpx.cpp)", 285282306,
    "Warning in Kakadu File Format Support:\n",
    "Cannot write all component regions to a single containing ROI Description (`roid') description box.  The JPX file format imposes a limit of 255 individual regions, but note that general quadrilaterals and oriented ellipses each consume 2 regions from this limit.\0"
  },
  {
    "W(jpx.cpp)", 419694849,
    "Warning in Kakadu File Format Support:\n",
    "Malformed Cross Reference (`cref') box found in JPX data source.\0"
  },
  {
    "W(jpx.cpp)", 638584833,
    "Warning in Kakadu File Format Support:\n",
    "Malformed Number List (`nlst') box found in JPX data source.  Box body does not contain a whole (non-zero) number of 32-bit integers.\0"
  },
  {
    "W(jpx.cpp)", 638584834,
    "Warning in Kakadu File Format Support:\n",
    "Malformed ROI Descriptions (`roid') box encountered in JPX data source.\0"
  }
};

static bool dummy_val = kdl_register_text(data,52);

#ifndef KDU_EXCLUDE_DEVELOPER_TEXT

static kdl_message_info dev_data[37] = {
  {
    "E(jpx.cpp)", 2,
    "Error in Kakadu File Format Support:\n",
    "Trying to write too many fragments to a fragment list (flst) box.  Maximum number of fragments is 65535, but note that each written fragment must have a length < 2^32 bytes.  Very long fragments may thus need to be split, creating the appearance of a very large number of fragments.\0"
  },
  {
    "E(jpx.cpp)", 4,
    "Error in Kakadu File Format Support:\n",
    "Attempting to call `jpx_input_box::open_as' without first closing the box.\0"
  },
  {
    "E(jpx.cpp)", 5,
    "Error in Kakadu File Format Support:\n",
    "You must supply a non-NULL `ultimate_src' argument to `jpx_input_box::open_as'.\0"
  },
  {
    "E(jpx.cpp)", 20,
    "Error in Kakadu File Format Support:\n",
    "You must add at least one compositing instruction to every frame created using `jpx_composition::add_frame'.\0"
  },
  {
    "E(jpx.cpp)", 21,
    "Error in Kakadu File Format Support:\n",
    "Attempting to add multiple animation frames which have a temporal duration of 0 milliseconds, using the `jpx_composition::add_frame' function.  This is clearly silly.\0"
  },
  {
    "E(jpx.cpp)", 22,
    "Error in Kakadu File Format Support:\n",
    "Illegal loop count supplied to `jpx_composition::set_loop_count'.  Legal values must be in the range 0 (indefinite looping) to 255 (max explicit repetitions).\0"
  },
  {
    "E(jpx.cpp)", 25,
    "Error in Kakadu File Format Support:\n",
    "Trying to add metadata to a `jpx_target' object whose `write_metadata' function as already been called.\0"
  },
  {
    "E(jpx.cpp)", 26,
    "Error in Kakadu File Format Support:\n",
    "Trying to add metadata to a `jpx_target' object whose `write_metadata' function has already been called.\0"
  },
  {
    "E(jpx.cpp)", 27,
    "Error in Kakadu File Format Support:\n",
    "Trying to add metadata to a `jpx_target' object whose `write_metadata' function has already been called.\0"
  },
  {
    "E(jpx.cpp)", 30,
    "Error in Kakadu File Format Support:\n",
    "You may not use `jpx_meta_manager::insert_node' to insert a region-specific metadata node which is not also associated with at least one codestream.  The reason is that ROI description boxes have meaning only when associated with codestreams, as described in the JPX standard.\0"
  },
  {
    "E(jpx.cpp)", 36,
    "Error in Kakadu File Format Support:\n",
    "One or more codestreams registration parameters supplied using `jpx_layer_target::set_codestream_registration' cannot be recorded in a legal JPX Codestream Registration (creg) box.\0"
  },
  {
    "E(jpx.cpp)", 39,
    "Error in Kakadu File Format Support:\n",
    "Attempting to use `jpx_codestream_source::open_stream' a second time, to gain access to the same codestream, without first closing the box.  To maintain multiple open instances of the same codestream, you should supply your own `jpx_input_box' object, rather than attempting to use the internal resource multiple times concurrently.\0"
  },
  {
    "E(jpx.cpp)", 44,
    "Error in Kakadu File Format Support:\n",
    "Attempting invoke `jpx_source::open' on a JPX source object which has been completely opened, but not yet closed.\0"
  },
  {
    "E(jpx.cpp)", 53,
    "Error in Kakadu File Format Support:\n",
    "You may not call `jpx_codestream_target::open_stream' or `jpx_codestream_target::write_fragment_table' until after the JPX file header has been written using `jpx_target::write_headers'.\0"
  },
  {
    "E(jpx.cpp)", 54,
    "Error in Kakadu File Format Support:\n",
    "You may not call `jpx_codestream_target::open_stream' or `jpx_codestream_target::write_fragment_table' multiple times for the same code-stream.\0"
  },
  {
    "E(jpx.cpp)", 55,
    "Error in Kakadu File Format Support:\n",
    "You must not call `jpx_codestream_target::write_fragment_table' without first adding one or more references to codestream fragments.\0"
  },
  {
    "E(jpx.cpp)", 56,
    "Error in Kakadu File Format Support:\n",
    "You may not call `jpx_codestream_target::open_stream' or `jpx_codestream_target::write_fragment_table' until after the JPX file header has been written using `jpx_target::write_headers'.\0"
  },
  {
    "E(jpx.cpp)", 57,
    "Error in Kakadu File Format Support:\n",
    "You may not call `open_stream' on a `jpx_codestream_target' object to which one or more codestream fragment references have already been added.  Each codestream must be represented by exactly one contiguous codestream or one fragment table, but not both.\0"
  },
  {
    "E(jpx.cpp)", 58,
    "Error in Kakadu File Format Support:\n",
    "You may not call `jpx_codestream_target::open_stream' or `jpx_codestream_target::write_fragment_table' multiple times for the same code-stream.\0"
  },
  {
    "E(jpx.cpp)", 59,
    "Error in Kakadu File Format Support:\n",
    "The `jpx_layer_target::add_colour' function has been used to add multiple colour descriptions for a JPX compositing layer, but not all colour descriptions have the same number of colour channels.\0"
  },
  {
    "E(jpx.cpp)", 60,
    "Error in Kakadu File Format Support:\n",
    "Application has configured a JPX compositing layer box which utilizes a non-existent codestream!\0"
  },
  {
    "E(jpx.cpp)", 61,
    "Error in Kakadu File Format Support:\n",
    "Invalid `precedence' or `approx' parameter supplied to `jpx_layer_target::add_colour'.  Legal values for the precedence parameter must lie in the range -128 to +127, while legal values for the approximation level parameter are 0, 1, 2, 3 and 4.\0"
  },
  {
    "E(jpx.cpp)", 62,
    "Error in Kakadu File Format Support:\n",
    "The denominator values supplied via all calls to `jpx_layer_target::set_codestream_registration' within the same compositing layer must be identical.  This is because the codestream registration (creg) box can record only one denominator (point density) to be shared by all the codestream sampling and alignment parameters.\0"
  },
  {
    "E(jpx.cpp)", 63,
    "Error in Kakadu File Format Support:\n",
    "Illegal alignment or sampling parameters passed to `jpx_layer_target::set_codestream_registration'.  The alignment offset and sampling numerator values must be non-negative (non-zero for sampling factors) and no larger than 255; moreover, the alignment offsets must be strictly less than the denominator (point density) values and the common sampling denominator must lie be in the range 1 to 65535.\0"
  },
  {
    "E(jpx.cpp)", 64,
    "Error in Kakadu File Format Support:\n",
    "Attempting to open a new top-level box within a JPX file, while another top-level box is already open!  Problem may be caused by failing to complete a code-stream and close its box before attempting to write a second code-stream.\0"
  },
  {
    "E(jpx.cpp)", 65,
    "Error in Kakadu File Format Support:\n",
    "Attempting to open a `jpx_target' object which is already opened for writing a JPX file.\0"
  },
  {
    "E(jpx.cpp)", 66,
    "Error in Kakadu File Format Support:\n",
    "Attempting to write a JPX file which has no code-stream, or no compositing layer.\0"
  },
  {
    "E(jpx.cpp)", 67,
    "Error in Kakadu File Format Support:\n",
    "Trying to invoke `jpx_target::write_metadata' after all metadata has already been written to the file.\0"
  },
  {
    "E(jpx.cpp)", 17172738,
    "Error in Kakadu File Format Support:\n",
    "Trying to convert a metadata node into a link which points to another metadata node that appears to have been deleted.\0"
  },
  {
    "E(jpx.cpp)", 33884417,
    "Error in Kakadu File Format Support:\n",
    "Trying to add new metadata to a `jpx_metanode' interface which is empty!\0"
  },
  {
    "E(jpx.cpp)", 83955713,
    "Error in Kakadu File Format Support:\n",
    "Registration information has been supplied via the `jpx_layer_target::set_codestream_registration' for a codestream which is not used by any channel defined for the compositing layer in question!  The codestream in question has (zero-based) index \0"
    " and the compositing layer has (zero-based) index \0"
  },
  {
    "E(jpx.cpp)", 402788353,
    "Error in Kakadu File Format Support:\n",
    "Invalid set of ROI regions supplied to `jpx_roi_editor::init'.\0"
  },
  {
    "E(jpx.cpp)", 553912577,
    "Error in Kakadu File Format Support:\n",
    "Trying to add a metadata link to a metadata node which appears to have been deleted.\0"
  },
  {
    "W(jpx.cpp)", 1,
    "Warning in Kakadu File Format Support:\n",
    "Colour description (colr) box found inside a compositing layer header (jplh) box, but not wrapped by a colour group (cgrp) box.  This is technically a violation of the JPX standard, but we will parse the box anyway.\0"
  },
  {
    "W(jpx.cpp)", 2,
    "Warning in Kakadu File Format Support:\n",
    "Started writing a JPX file, but failed to write all codestreams before calling `jpx_target::close'.\0"
  },
  {
    "W(jpx.cpp)", 3,
    "Warning in Kakadu File Format Support:\n",
    "Started writing JPX file headers, but failed to finish initiated sequence of calls to `jpx_target::write_headers'.  Problem is most likely due to the use of `jpx_codestream_target::set_breakpoint' or `jpx_layer_target::set_breakpoint' and failure to handle the breakpoints via multiple calls to `jpx_target::write_headers'.\0"
  },
  {
    "W(jpx.cpp)", 4,
    "Warning in Kakadu File Format Support:\n",
    "Failed to catch all breakpoints installed via `jpx_codestream_target::set_breakpoint' or `jpx_layer_target::set_breakpoint'.  All required compositing layer header boxes and codestream header boxes have been automatically written while closing the file, but some of these included application-installed breakpoints where the application would ordinarily have written its own extra boxes.  This suggests that the application has failed to make sufficient explicit calls to `jpx_target::write_headers'.\0"
  }
};

static bool dev_dummy_val = kdl_register_text(dev_data,37);

#endif // !KDU_EXCLUDE_DEVELOPER_TEXT
